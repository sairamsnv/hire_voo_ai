# Generated by Django 5.2.4 on 2025-07-18 15:42

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0004_sessionsettings_usersession_sessionactivity_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='user',
            name='is_premium',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name for this API key', max_length=100)),
                ('key', models.CharField(db_index=True, max_length=64, unique=True)),
                ('key_type', models.CharField(choices=[('read', 'Read Only'), ('write', 'Read/Write'), ('admin', 'Admin'), ('webhook', 'Webhook')], default='read', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('can_read_sessions', models.BooleanField(default=False)),
                ('can_write_sessions', models.BooleanField(default=False)),
                ('can_read_analytics', models.BooleanField(default=False)),
                ('can_write_analytics', models.BooleanField(default=False)),
                ('can_admin_users', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='APIRequestLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('endpoint', models.CharField(max_length=200)),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('PATCH', 'PATCH'), ('DELETE', 'DELETE')], max_length=10)),
                ('status_code', models.IntegerField()),
                ('response_time', models.FloatField(help_text='Response time in seconds')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('request_size', models.IntegerField(default=0, help_text='Request size in bytes')),
                ('response_size', models.IntegerField(default=0, help_text='Response size in bytes')),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('api_key', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requests', to='accounts.apikey')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='api_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('rate_limit_exceeded', 'Rate Limit Exceeded'), ('suspicious_activity', 'Suspicious Activity'), ('sql_injection', 'SQL Injection Attempt'), ('xss_attempt', 'XSS Attempt'), ('path_traversal', 'Path Traversal Attempt'), ('invalid_api_key', 'Invalid API Key'), ('unauthorized_access', 'Unauthorized Access'), ('malicious_user_agent', 'Malicious User Agent'), ('large_request', 'Large Request'), ('multiple_failures', 'Multiple Failures')], max_length=50)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('request_data', models.JSONField(blank=True, default=dict)),
                ('resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('api_key', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='security_events', to='accounts.apikey')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_events', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='security_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='apikey',
            index=models.Index(fields=['key'], name='accounts_ap_key_d955e0_idx'),
        ),
        migrations.AddIndex(
            model_name='apikey',
            index=models.Index(fields=['user', 'is_active'], name='accounts_ap_user_id_ec9140_idx'),
        ),
        migrations.AddIndex(
            model_name='apikey',
            index=models.Index(fields=['expires_at'], name='accounts_ap_expires_658c35_idx'),
        ),
        migrations.AddIndex(
            model_name='apirequestlog',
            index=models.Index(fields=['api_key', 'created_at'], name='accounts_ap_api_key_0cb0c4_idx'),
        ),
        migrations.AddIndex(
            model_name='apirequestlog',
            index=models.Index(fields=['user', 'created_at'], name='accounts_ap_user_id_79b732_idx'),
        ),
        migrations.AddIndex(
            model_name='apirequestlog',
            index=models.Index(fields=['status_code'], name='accounts_ap_status__51db22_idx'),
        ),
        migrations.AddIndex(
            model_name='apirequestlog',
            index=models.Index(fields=['endpoint'], name='accounts_ap_endpoin_fd0c3e_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['event_type', 'created_at'], name='accounts_se_event_t_67c552_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['severity', 'created_at'], name='accounts_se_severit_6d83fc_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['ip_address', 'created_at'], name='accounts_se_ip_addr_028bd7_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['resolved'], name='accounts_se_resolve_782f39_idx'),
        ),
    ]
